name: Test Terraform Plugin

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
    
    - name: Run flake8
      run: flake8 Terraform --count --select=E9,F63,F7,F82 --show-source --statistics
    
    - name: Run black
      run: black --check Terraform
    
    - name: Run isort
      run: isort --check-only Terraform

  test:
    name: Run Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
        sublime-version: ['4']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
    
    - name: Run unit tests
      run: |
        cd Terraform/tests
        python run_tests.py -v --json-report test-results.json
    
    - name: Run integration tests
      run: |
        cd Terraform/tests
        python run_tests.py --integration -v
    
    - name: Run performance tests
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.8'
      run: |
        cd Terraform/tests
        python run_tests.py --performance -v
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.python-version }}
        path: Terraform/tests/test-results.json

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage pytest pytest-cov
    
    - name: Run tests with coverage
      run: |
        cd Terraform
        coverage run -m pytest tests/
        coverage xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./Terraform/coverage.xml
        flags: unittests
        name: codecov-umbrella

  syntax-test:
    name: Test Syntax Definitions
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Sublime Text syntax test runner
      run: |
        # Install syntax test runner
        git clone https://github.com/SublimeText/syntax-test-runner.git
        cd syntax-test-runner
        pip install -e .
    
    - name: Run syntax tests
      run: |
        cd Terraform
        syntax-test syntaxes/*.sublime-syntax tests/syntax_test_*.tf

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [lint, test, syntax-test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create package
      run: |
        # Create release directory
        mkdir -p release
        
        # Copy files
        cp -r Terraform/* release/
        
        # Remove test files and dev files
        rm -rf release/tests
        rm -f release/test_*.py
        rm -f release/.gitignore
        rm -f release/requirements-test.txt
        
        # Create zip
        cd release
        zip -r ../Terraform.sublime-package *
    
    - name: Upload package
      uses: actions/upload-artifact@v3
      with:
        name: Terraform.sublime-package
        path: Terraform.sublime-package

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download package
      uses: actions/download-artifact@v3
      with:
        name: Terraform.sublime-package
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: Terraform.sublime-package
        draft: false
        prerelease: false
        body: |
          ## Changes
          
          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
          
          ## Installation
          
          1. Download `Terraform.sublime-package`
          2. Place in your Sublime Text Packages directory
          3. Restart Sublime Text
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}